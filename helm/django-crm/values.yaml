# Default values for django-crm Helm chart
# This is a YAML-formatted file.

# Global settings
global:
  registry: "your-gitea-hostname.com/your-username"
  tag: "latest"
  pullPolicy: IfNotPresent

# Django CRM application
crm:
  enabled: true
  name: crm
  image:
    repository: django-crm
    tag: ""  # Uses global.tag if empty
    pullPolicy: ""  # Uses global.pullPolicy if empty
  
  replicaCount: 1
  
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
    annotations: {}
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: crm.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: crm-tls
        hosts:
          - crm.example.com
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  # Django settings ConfigMap
  settings:
    # These will be mounted as /app/webcrm/settings.py
    allowedHosts:
      - "localhost"
      - "127.0.0.1"
      - "crm.example.com"
    csrfTrustedOrigins:
      - "https://crm.example.com"
    secretKey: "j1c=6$s-dh#$ywt@(q4cm=j&0c*!0x!e-qm6k1%yoliec(15tn"
    debug: false
    
  # Environment variables
  env:
    - name: MYSQL_HOST
      value: "db"
    - name: MYSQL_DATABASE
      value: "crm_db"
    - name: MYSQL_USER
      value: "crm_user"
    - name: MYSQL_PASSWORD
      valueFrom:
        secretRef:
          name: mysql-secret
          key: password

# MySQL database
mysql:
  enabled: true
  name: db
  image:
    repository: mysql
    tag: "8"
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  service:
    type: ClusterIP
    port: 3306
    targetPort: 3306
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  
  # MySQL configuration
  config:
    rootPassword: "Secret5555"
    database: "crm_db"
    user: "crm_user"
    password: "crmpass"
  
  # Persistent storage
  persistence:
    enabled: true
    storageClass: ""  # Use default storage class
    accessMode: ReadWriteOnce
    size: 10Gi
    # For NFS storage (like TrueNAS)
    nfs:
      enabled: true
      server: "10.172.27.9"
      path: "/mnt/mysql-data"

# Adminer (database admin interface)
adminer:
  enabled: true
  name: adminer
  image:
    repository: adminer
    tag: "latest"
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  service:
    type: ClusterIP
    port: 8078
    targetPort: 8080
  
  ingress:
    enabled: false
    className: "nginx"
    hosts:
      - host: adminer.example.com
        paths:
          - path: /
            pathType: Prefix
  
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  
  env:
    - name: ADMINER_DEFAULT_SERVER
      value: "db"

# Security and configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

# Network policies (optional)
networkPolicy:
  enabled: false
