# Kubernetes manifests generated from docker-compose.yml using kompose
# Run: kompose convert -f docker-compose.yml -o k8s/

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: crm
  name: crm
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: crm
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: db
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: adminer-container
  name: adminer-container
spec:
  ports:
    - name: "8078"
      port: 8078
      targetPort: 8080
  selector:
    io.kompose.service: adminer-container
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: crm
  name: crm
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: crm
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.service: crm
    spec:
      containers:
        - image: crm:latest
          name: crm
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /app/webcrm/settings.py
              name: crm-claim0
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: crm-claim0
          persistentVolumeClaim:
            claimName: crm-claim0
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: crm_db
            - name: MYSQL_PASSWORD
              value: crmpass
            - name: MYSQL_ROOT_PASSWORD
              value: Secret5555
            - name: MYSQL_USER
              value: crm_user
          image: mysql:8
          name: db
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-db-data
      restartPolicy: Always
      volumes:
        - name: mysql-db-data
          persistentVolumeClaim:
            claimName: mysql-db-data
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: adminer-container
  name: adminer-container
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: adminer-container
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.service: adminer-container
    spec:
      containers:
        - env:
            - name: ADMINER_DEFAULT_SERVER
              value: db
          image: adminer:latest
          name: adminer-container
          ports:
            - containerPort: 8080
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: crm-claim0
  name: crm-claim0
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-db-data
  name: mysql-db-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
